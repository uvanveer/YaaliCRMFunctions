void automation.Untitled_Function32(Map sms_texts)
{
idz = sms_texts.get("twilio.SMS_Texts.ID");
recordMap = {"module":"twilio.SMS_Texts","id":idz};
resp = zoho.crm.invokeConnector("crm.get",recordMap);
usersVal = resp.get("response").get("data");
CustomSMSMessage = usersVal.getJSON("twilio__Custom_SMS_Message");
if(CustomSMSMessage == null)
{
	info "No SMS Content";
}
else
{
	tmobiletemp = zoho.crm.getOrgVariable("twilio.Twilio_Mobile_Number");
	if(tmobiletemp.contains(" "))
	{
		twiliomobile = tmobiletemp.replaceAll(" ","",false);
	}
	else
	{
		twiliomobile = tmobiletemp;
	}
	if(twiliomobile.contains("-"))
	{
		twiliomobilenew = twiliomobile.replaceAll("-","",false);
	}
	else
	{
		twiliomobilenew = tmobiletemp;
	}
	authtokenTwilio = zoho.crm.getOrgVariable("twilio.AuthToken");
	twilioAccSId = zoho.crm.getOrgVariable("twilio.Account_SID");
	baseEncoded = zoho.encryption.base64Encode(twilioAccSId + ":" + authtokenTwilio);
	encode = baseEncoded.removeFirstOccurence("\n");
	mapp = Map:String();
	mapp.put("Authorization","Basic " + encode);
	mapp.put("Content-Type","application/x-www-form-urlencoded");
	mappp = Map:String();
	mappp.put("From",twiliomobilenew);
	locale = zoho.crm.getOrgVariable("twilio.Language");
	if(locale == null || locale == "null" || locale == "")
	{
		mappp.put("locale","en");
	}
	else
	{
		mappp.put("locale",locale);
	}
	if(usersVal.getJSON("twilio__Contact") != null && usersVal.getJSON("twilio__Lead") != null)
	{
		leadIdz = usersVal.getJSON("twilio__Lead")._toMap();
		leadId = leadIdz.getJSON("id");
		data1map = Map:String();
		data1map.put("module","Leads");
		data1map.put("id",leadId);
		resp1 = zoho.crm.invokeConnector("crm.get",data1map);
		resppMap = resp1.get("response")._toMap();
		users1 = resppMap.get("data");
		if(users1.startsWith("["))
		{
			temp = users1.subString(1,users1.length() - 1);
		}
		else
		{
			temp = users1.toJSONList().toString();
		}
		usersVal1 = temp._toMap();
		Mobile = usersVal1.getJSON("Mobile");
		contactIdz = usersVal.getJSON("twilio__Contact")._toMap();
		contactId = contactIdz.getJSON("id");
		data2map = Map:String();
		data2map.put("module","Contacts");
		data2map.put("id",contactId);
		resp2 = zoho.crm.invokeConnector("crm.get",data2map);
		resp2Map = resp2.get("response")._toMap();
		users2 = resp2Map.get("data");
		if(users2.startsWith("["))
		{
			temp = users2.subString(1,users2.length() - 1);
		}
		else
		{
			temp = users2.toJSONList().toString();
		}
		usersVal2 = temp._toMap();
		Mobile1 = usersVal2.getJSON("Mobile");
		mappp.put("To",Mobile);
		mappp.put("Body",CustomSMSMessage);
		respp = postUrl("https://api.twilio.com/2010-04-01/Accounts/" + twilioAccSId + "/Messages.json",mappp,mapp);
		mappp.remove("To");
		mappp.remove("Body");
		mappp.put("To",Mobile1);
		mappp.put("Body",CustomSMSMessage);
		resppp = postUrl("https://api.twilio.com/2010-04-01/Accounts/" + twilioAccSId + "/Messages.json",mappp,mapp);
	}
	else if(usersVal.getJSON("twilio__Lead") != null && usersVal.getJSON("twilio__Contact") == null)
	{
		leadIdz = usersVal.getJSON("twilio__Lead")._toMap();
		leadId = leadIdz.getJSON("id");
		data1map = Map:String();
		data1map.put("module","Leads");
		data1map.put("id",leadId);
		resp1 = zoho.crm.invokeConnector("crm.get",data1map);
		resppMap = resp1.get("response")._toMap();
		users1 = resppMap.get("data");
		if(users1.startsWith("["))
		{
			temp = users1.subString(1,users1.length() - 1);
		}
		else
		{
			temp = users1.toJSONList().toString();
		}
		usersVal1 = temp._toMap();
		Mobile = usersVal1.getJSON("Mobile");
		mappp.put("To",Mobile);
		mappp.put("Body",CustomSMSMessage);
		respp = postUrl("https://api.twilio.com/2010-04-01/Accounts/" + twilioAccSId + "/Messages.json",mappp,mapp);
	}
	else if(usersVal.getJSON("twilio__Contact") != null && usersVal.getJSON("twilio__Lead") == null)
	{
		contactIdz = usersVal.getJSON("twilio__Contact")._toMap();
		contactId = contactIdz.getJSON("id");
		data2map = Map:String();
		data2map.put("module","Contacts");
		data2map.put("id",contactId);
		resp2 = zoho.crm.invokeConnector("crm.get",data2map);
		resp2Map = resp2.get("response")._toMap();
		users2 = resp2Map.get("data");
		if(users2.startsWith("["))
		{
			temp = users2.subString(1,users2.length() - 1);
		}
		else
		{
			temp = users2.toJSONList().toString();
		}
		usersVal2 = temp._toMap();
		Mobile1 = usersVal2.getJSON("Mobile");
		mappp.put("To",Mobile1);
		mappp.put("Body",CustomSMSMessage);
		resppp = postUrl("https://api.twilio.com/2010-04-01/Accounts/" + twilioAccSId + "/Messages.json",mappp,mapp);
	}
	else
	{
		info "No Number to send message!";
	}
}
}