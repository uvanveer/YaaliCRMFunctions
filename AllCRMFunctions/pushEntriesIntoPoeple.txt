void automation.pushEntriesIntoPeople(Int entry_id)
{
//3106252000056924012
//id = "marcjason@bestaccessdoors.com";
//token = "7ab305ebfd8db94ef4d5ff0cc46bcb04";
//4560742d1708e8398c279a7d5fbf4823
token = "4560742d1708e8398c279a7d5fbf4823";
full_entry = zoho.crm.getRecordById("Time_Entries_for_Employe",entry_id);
employe_id = full_entry.get("Employee").get("id");
search = zoho.crm.searchRecords("users","id:equals:" + employe_id);
id = search.get("users").get(0).get("email");
//id = "marcjason@bestaccessdoors.com";
dateFormat = "yyyy-MM-dd HH:mm:ss";
counter = 1;
for each  one_time in full_entry.get("Time_stamps")
{
	info one_time.get("Type_of_time");
	start = one_time.get("Start").subString(0,19).replaceAll("T"," ");
	//info start;
	if(one_time.get("End") != null)
	{
		end = one_time.get("End").subString(0,19).replaceAll("T"," ");
	}
	else
	{
		end = null;
	}
	if(one_time.get("Type_of_time") != "Work" && end != null)
	{
		type = one_time.get("Type_of_time");
		info type;
		Note = one_time.get("Note");
		info "NOTE:________ " + Note;
		url = "https://people.zoho.com/api/attendance/addBreakEntry";
		par = "?authtoken=" + token + "&dateFormat=" + dateFormat + "&fromTime=" + start + "&toTime=" + end + "&emailId=" + id + "&breakName=" + type + "&breakStart_Notes=" + Note;
		//+ "&breakEnd_Notes=" + Note;
		urlll = url + par;
		//info urlll;
		g = getUrl(urlll);
		info g;
	}
	if(one_time.get("Type_of_time") = "Work")
	{
		url = "https://people.zoho.com/people/api/attendance";
		Note = one_time.get("Note");
		par = "?authtoken=" + token + "&dateFormat=" + dateFormat + "&checkIn=" + start + "&emailId=" + id;
		urlll = url + par;
		g = getUrl(urlll);
		//info g;
		if(end != null)
		{
			par = "?authtoken=" + token + "&dateFormat=" + dateFormat + "&checkOut=" + end + "&emailId=" + id;
			urlll = url + par;
			g = getUrl(urlll);
		}
	}
	counter = counter + 1;
}
}