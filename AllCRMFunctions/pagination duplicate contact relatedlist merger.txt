void automation.Pagination_Duplicate_Contact_Relatedlist_Merger(String page,String module)
{
/* Created By prashanth on 2020 */
/* related list merger method for duplicate contact  */
// currently not in use
// maillist = zoho.crm.getRecords("Contacts",page,200,{"cvid":3106252000064969083});
maillist = zoho.crm.getRecords("Contacts",1,1,{"cvid":3106252000067722003});
sendmail
[
	from :zoho.loginuserid
	to :"prabhu@bizappln.com"
	subject :page + ".pagination duplicate contact module "
	message :"create duplicate related list merger pagination " + maillist.size()
]
processCount = 0;
for each  rec in maillist
{
	processCount = processCount + 1;
	email = ifnull(rec.get("Email"),"");
	duplicateid = rec.get("id").toLong();
	getconatc = zoho.crm.searchRecords("Contacts","Email:equals:" + email);
	masterFound = false;
	info "--------" + processCount + "-------starts for " + rec.get("id") + " ---search contact res---" + getconatc.size() + "---------";
	getsalorders = zoho.crm.searchRecords("Sales_Orders","(Contact_Name:equals:" + duplicateid + ")");
	getPOreletedrecords = zoho.crm.getRelatedRecords("PurchaseOrders","Contacts",duplicateid);
	if(getPOreletedrecords.size() > 0 || getsalorders.size() > 0)
	{
		if(email != "")
		{
			if(getconatc.size() == 1)
			{
				info "only one contact is found for mail " + email + " id " + duplicateid;
			}
			else if(getconatc.size() == 0)
			{
				info "no contact was found for mail " + email + " id " + duplicateid;
			}
			else if(getconatc.size() > 1)
			{
				info "more than 1 contact was found for mail " + email + " id " + duplicateid;
				for each  masterD in getconatc
				{
					if(masterD.get("Master") == true)
					{
						masterFound = true;
						masterID = masterD.get("id");
					}
				}
				if(masterFound == true)
				{
					info "Master Found " + masterID;
					if(getPOreletedrecords.size() > 0 || getsalorders.size() > 0)
					{
						salorderidslist = List();
						info "SO list " + getsalorders.size();
						if(getsalorders.size() > 0)
						{
							for each  saleorderid in getsalorders
							{
								salorderids = Map();
								if(saleorderid.get("id") != null)
								{
									salorderids.put("saleordid",saleorderid.get("id"));
								}
								salorderidslist.add(salorderids);
							}
							if(salorderidslist.size() > 0)
							{
								info "formed saleorder list " + salorderidslist;
								for each  saleorderids in salorderidslist
								{
									saleorder_id = saleorderids.get('saleordid').toLong();
									salorderupdate = Map();
									salorderupdate.put("Contact_Name",masterID);
									updatesalorder = zoho.crm.updateRecord("Sales_Orders",saleorder_id,salorderupdate);
									info "----updatesalorder--------" + updatesalorder;
								}
							}
						}
						info "po " + getPOreletedrecords.size();
						if(getPOreletedrecords.size() > 0)
						{
							for each  getporeltrcd in getPOreletedrecords
							{
								datamap = Map();
								datamap.put("Contact_Name",masterID);
								updatepo = zoho.crm.updateRecord("Purchase_Orders",getporeltrcd.get("id"),datamap);
								info "------update PO------" + updatepo;
							}
						}
						updateDuplicate = zoho.crm.updateRecord("Contacts",duplicateid.toLong(),{"Merged_Relatedlist":true,"RelatedList_Merged_To":masterID.toString(),"RelatedList_Notes":"saleorder :" + getsalorders.size() + " & dropship order :" + getPOreletedrecords.size() + " merged to :" + masterID});
						updateMaster = zoho.crm.updateRecord("Contacts",masterID.toLong(),{"Merged_Relatedlist":true,"RelatedList_Merged_From":duplicateid.toString(),"RelatedList_Notes":"saleorder :" + getsalorders.size() + " & dropship order :" + getPOreletedrecords.size() + " merged from :" + duplicateid});
						info "---- update dup " + updateDuplicate;
						info "---- update mas " + updateMaster;
					}
					else
					{
						info "no saleorder or dropship order found";
						updateDuplicate = zoho.crm.updateRecord("Contacts",duplicateid.toLong(),{"Merged_Relatedlist":true,"RelatedList_Notes":"No saleorder & dropship order found"});
					}
				}
				else
				{
					updateDuplicate = zoho.crm.updateRecord("Contacts",duplicateid.toLong(),{"Merged_Relatedlist":false,"RelatedList_Merged_To":masterID.toString(),"RelatedList_Notes":"Master not found"});
					info "master not found";
				}
			}
		}
		else
		{
			info "no email found.. search with phone";
		}
	}
	else
	{
		info "no sale order or dropship order found";
		updateDuplicate = zoho.crm.updateRecord("Contacts",duplicateid.toLong(),{"Merged_Relatedlist":true,"RelatedList_Notes":"No saleorder & dropship order found"});
	}
}
// if(processCount == 200)
// {
// 	//Dup_Relatedlist Page
// 	updatedIndexCount = page.toNumber() + 1;
// 	updateprocessCount = zoho.crm.updateRecord("Highrise_Connector",3106252000065101001,{"Dup_Relatedlist_Page_Index":updatedIndexCount});
// 	createPagination = zoho.crm.createRecord("Highrise_Pagination",{"Index":updatedIndexCount.toString(),"Module":"Duplicate Contacts"},{"trigger":{"workflow"}});
// }
}