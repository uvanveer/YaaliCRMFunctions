string button.retry_Shipment_Creation_to_BC(String id)
{
get_domain = zoho.crm.getRecordById("Domain_Settings",3106252000056886136);
base_url = get_domain.get("Domain_Name");
getd = zoho.crm.getRecordById("Purchase_Orders",id);
workflow = Map();
workflow.put("trigger",{"workflow"});
if(getd.get("Store").get("name") != "Amazon Store")
{
	if(getd.get("Shipment_Id") != "")
	{
		if(getd.get("Carrier") != "" && getd.get("Carrier") != "None" && getd.get("Tracking_Number") != "")
		{
			updated = zoho.crm.updateRecord("Purchase_Orders",id,{"Status":"Shipped"},workflow);
			saleorderid = getd.get("Sales_Order").get("id");
			saleorderdata = zoho.crm.getRecordById("Sales_Orders",saleorderid);
			// info saleorderdata;
			Storename = saleorderdata.get("Store").get("name");
			BADAuthorization = zoho.crm.getOrgVariable("OAuthHashCode");
			header_map = Map();
			header_map.put("Content-Type","application/json");
			header_map.put("BADAuthorization",BADAuthorization);
			// senddata = postUrl("https://ymaconnect.com/api/zcrm/DropTracking",bigmap.toString(),header_map);
			// info "senddata" + senddata;
			// // // Update purchase order in books
			//Reason: To avoid Zoho Books API Limit issue.
			// 			getPur = zoho.books.getRecords("Purchaseorders","666840843","purchaseorder_number=" + getd.get("Dropship_Number"));
			// 			purid = getPur.get("purchaseorders").toString().get("purchaseorder_id");
			// 			upPur = zoho.books.updateRecord("Purchaseorders","666840843",purid.toString(),{"status":"closed","reference_number":getd.get("Tracking_Number"),"ship_via":getd.get("Carrier")});
			getreldrop = zoho.crm.getRelatedRecords("Dropship_Orders","Sales_Orders",getd.get("Sales_Order").get("id"));
			bigmap = Map();
			bigmap.put("status_id","Partially Shipped");
			bigmap.put("order_id",getd.get("Subject"));
			bigmap.put("store_name",Storename);
			info "bigmap" + bigmap;
			statusSal = "true";
			for each  g in getreldrop
			{
				// info "Status:" + g.get("Status") ;
				if(g.get("Status") != "Shipped" && g.get("Status") != "Cancelled")
				{
					statusSal = "false";
				}
			}
			if(statusSal == "true")
			{
				updateS = zoho.crm.updateRecord("Sales_Orders",getd.get("Sales_Order").get("id").toLong(),{"Status":"Completed"},workflow);
				bigmap1 = Map();
				bigmap1.put("status_id","Shipped");
				bigmap1.put("order_id",getd.get("Subject"));
				bigmap1.put("store_name",Storename);
				info "bigmap1" + bigmap1;
				senddata1 = invokeurl
				[
					url :base_url + "/api/zcrm/DropTracking"
					type :POST
					parameters:bigmap1
					headers:header_map
					detailed:true
				];
				if(senddata1.get("responseCode") == 200)
				{
					// update status in books
					getsal = zoho.books.getRecords("Salesorders","666840843","cf_bigcommerce_unique_id:equals:" + saleorderdata.get("BigCommerce_Unique_ID"));
					// 	info getsal;
					info getd.get("Subject");
					getsal = zoho.books.getRecords("Salesorders","666840843","salesorder_number=" + getd.get("Subject"));
					// condition added by barani bd 17/08/2022
					if(getsal.containKey("salesorders") == true)
					{
						salid = getsal.get("salesorders").toString().get("salesorder_id");
						saleupdate = zoho.books.updateRecord("Salesorders","666840843",salid.toString(),{"status":"closed"});
					}
				}
				responsertn = senddata1.toMap();
			}
			// 			getd = zoho.crm.getRecordById("Purchase_Orders",id);
			products = getd.get("Product_Details").toJSONList();
			// 			saleorderdata = zoho.crm.getRecordById("Sales_Orders",getd.get("Sales_Order").get("id"));
			// 			Storename = saleorderdata.get("Store").get("name");
			ship = Map();
			pro = Map();
			for each  prod in products
			{
				pro.put(prod.get("product").get("Product_Code"),"sku");
			}
			orderid = getd.get("Subject").replaceAll("#","");
			ship.put("sku",pro);
			ship.put("store_name",Storename);
			ship.put("carrier",getd.get("Carrier"));
			ship.put("orderid",orderid);
			ship.put("tracking",getd.get("Tracking_Number"));
			ship.put("shipping_method","fedex");
			ship.put("Shipment_Id",getd.get("Shipment_Id"));
			if(getd.get("Comments") != null)
			{
				ship.put("Comments",getd.get("Comments"));
			}
			BADAuthorization = zoho.crm.getOrgVariable("OAuthHashCode");
			header_map = Map();
			header_map.put("Content-Type","application/json");
			header_map.put("BADAuthorization",BADAuthorization);
			info "ship" + ship;
			Shipment_Response = invokeurl
			[
				url :base_url + "/api/zcrm/DropShipment"
				type :POST
				parameters:ship.toString()
				headers:header_map
				detailed:true
			];
			// Shipment_Response = postUrl(base_url + "/api/zcrm/DropShipment",ship.toString(),header_map);
			// 		info "Shipment_Response" + Shipment_Response;
			// 		Shipment_Response.put("responseCode",429);
			if(Shipment_Response.get("responseCode") == 200)
			{
				shipmentid = Shipment_Response.getJSON("responseText").getJSON("id");
				shipment_update = Map();
				shipment_update.put("Shipment_Id",shipmentid);
				responsertn = Shipment_Response.getJSON("responseText");
				if(shipmentid != null)
				{
					updated = zoho.crm.updateRecord("Purchase_Orders",id,shipment_update,workflow);
					responsertn = "Shipment created successfully shipment id is " + shipmentid;
					info "Update shipment ID to CRM DSO Response: " + responsertn;
				}
				else
				{
					// 					shipment_update_response = Map();
					// 					shipment_update_response.put("Note_Title","Shipment Creation Error Response : " + zoho.currentdate);
					// 					shipment_update_response.put("Note_Content",Shipment_Response.toString());
					// 					shipment_update_response.put("Parent_Id",id);
					// 					shipment_update_response.put("$se_module","Purchase_Orders");
					// 					createres = zoho.crm.createRecord("Notes",shipment_update_response);
					// 					info "create" + createres;
					responsertn = Shipment_Response.getJSON("responseText");
				}
			}
		}
		else
		{
			responsertn = "No Carrier and Tracking number are available for this order";
		}
	}
	else
	{
		responsertn = "This order already created shipment.";
	}
}
else
{
	responsertn = "We are unable to process this order becuase this Order from Amazon Store... We will enable this option soon...  ";
}
// Change this function return statement will affect this process in Zoho Creator: https://creator.zoho.com/appbuilder/zoho_zoho1502/quotes/workflowbuilder/Retry_Shipment_Creation/edit
return responsertn;
}