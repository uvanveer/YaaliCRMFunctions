string standalone.ELMDOR_USA_Invoice_to_Bill_with_PDF(String crmAPIRequest)
{
/*
  Company: Insta Web Works Pty Ltd., Australia
  Author: Emranul Hassan
  Function Name: ELMDOR USA Invoice to Bill with PDF
  Versiion: 3
  Client ID: j045t50a2194e316840ca83aa4aa49f48820e
  Function ID: 2qey7bde3553824dc47e7bcf314245d743007
  Time: 2020-08-13 20:37:39
  For any modification please contact admin@instawebworks.com.au
*/
orgId = 666840843;
crm_api_map = crmAPIRequest.toMap();
params = crm_api_map.get("body");
bill_no = ifnull(params.get("bill_no"),"");
invoice_date_map = ifnull(params.get("invoice_date"),Map());
invoice_date = ifnull(invoice_date_map.get("formatted"),"");
po_no = ifnull(params.get("po_no"),"");
tax_data_map = ifnull(params.get("tax_data"),Map());
tax_data = ifnull(tax_data_map.get("match"),0.0);
if(tax_data == "")
{
	tax_data = 0.0;
}
shipping_cost_map = ifnull(params.get("shipping_cost"),Map());
shipping_cost = ifnull(shipping_cost_map.get("match").getSuffix("$"),0.0);
if(shipping_cost == "")
{
	shipping_cost = 0.0;
}
attachment_link = ifnull(params.get("media_link_original"),"");
try 
{
	//checkBillNoHas = 
	searchText = "(Po_No:equals:" + po_no + ")";
	serachRecordsCRM = zoho.crm.searchRecords("Bill_Parser",searchText);
	if(serachRecordsCRM.size() > 0)
	{
	}
	else
	{
		createMap = Map();
		createMap.put("Name",po_no);
		createMap.put("Bill_No",bill_no);
		createMap.put("Invoice_Date",invoice_date);
		createMap.put("Po_No",po_no);
		createMap.put("Tax_Data",tax_data.tostring());
		createMap.put("Shipping_cost",shipping_cost.tostring());
		createMap.put("Media_Link_Orginal",attachment_link);
		createMap.put("Retry_Count",0);
		createMap.put("Bill_Parser_Request",crmAPIRequest.trim());
		createMap.put("Bill_Parser_ID",params.get("id"));
		createMap.put("Document_ID",params.get("document_id"));
		createMap.put("File_Name",params.get("file_name"));
		createMap.put("Vendor_Name",3106252000066322165);
		createResonse = zoho.crm.createRecord("Bill_Parser",createMap,{"trigger":{"workflow"}});
		info createResonse;
	}
}
catch (e)
{
}
/**
 * Test Data
 */
// po_no = "Testing-09";
// tax_data = 10.0;
// shipping_cost = 20.0;
/**
 * End of Test Data
 */
/**
 * Attachment Link and File Stream
 */
// if(attachment_link != "")
// {
// 	attachment_link = attachment_link.replaceAll("\\","");
// 	attach_file = invokeurl
// 	[
// 		url :attachment_link
// 	];
// 	attach_file.setParamName("attachment");
// 	info "Attach File : " + attach_file;
// }
/*
	Process Purchase Order
*/
// if(po_no != "")
// {
// 	po_resps = invokeurl
// 	[
// 		url :"https://books.zoho.com/api/v3/purchaseorders?organization_id=" + orgId + "&purchaseorder_number=" + zoho.encryption.urlEncode(po_no)
// 		type :GET
// 		connection:"mailparserzoho"
// 	];
// 	// 	info po_resps;   
// 	if(!po_resps.get("purchaseorders").isEmpty())
// 	{
// 		po_order_resp = po_resps.get("purchaseorders").get(0);
// 		// Get PO Details
// 		po_full_details = invokeurl
// 		[
// 			url :"https://books.zoho.com/api/v3/purchaseorders/" + po_order_resp.get("purchaseorder_id") + "?organization_id=" + orgId
// 			type :GET
// 			connection:"mailparserzoho"
// 		];
// 		// Mark PO Open
// 		po_open_resp = invokeurl
// 		[
// 			url :"https://books.zoho.com/api/v3/purchaseorders/" + po_order_resp.get("purchaseorder_id") + "/status/open?organization_id=" + orgId
// 			type :POST
// 			connection:"mailparserzoho"
// 		];
// 		info po_open_resp;
// 		// Mark PO Billed
// 		po_open_resp = invokeurl
// 		[
// 			url :"https://books.zoho.com/api/v3/purchaseorders/" + po_order_resp.get("purchaseorder_id") + "/status/billed?organization_id=" + orgId
// 			type :POST
// 			connection:"mailparserzoho"
// 		];
// 		info po_open_resp;
// 		po_full_detail = po_full_details.get("purchaseorder");
// 		bill_map = Map();
// 		bill_line_items = list();
// 		// Processing PO Items
// 		tax_percentage = 0.0;
// 		shipping_found = 0;
// 		for each  po_line_item in po_full_detail.get("line_items")
// 		{
// 			bill_line_item = Map();
// 			bill_line_item.put("item_id",po_line_item.get("item_id"));
// 			bill_line_item.put("account_id",po_line_item.get("account_id"));
// 			if(po_line_item.get("item_id") == "1324986000026491986" && shipping_cost.toDecimal() > 0.0)
// 			{
// 				shipping_found = 1;
// 				bill_line_item.put("rate",shipping_cost);
// 			}
// 			else
// 			{
// 				bill_line_item.put("rate",po_line_item.get("rate"));
// 			}
// 			bill_line_item.put("quantity",po_line_item.get("quantity"));
// 			bill_line_item.put("tax_id",po_line_item.get("tax_id"));
// 			bill_line_item.put("item_order",po_line_item.get("item_order"));
// 			bill_line_item.put("description",po_line_item.get("description"));
// 			bill_line_item.put("name",po_line_item.get("name"));
// 			bill_line_items.add(bill_line_item);
// 		}
// 		info shipping_cost;
// 		if(shipping_cost.toDecimal() > 0.0 && shipping_found == 0)
// 		{
// 			bill_line_item = Map();
// 			bill_line_item.put("item_id","1324986000026491986");
// 			// usa.  1324986000026491974 canada 1324986000026491980   Account ID
// 			// Now usa.  1324986000067828502 canada 1324986000067828582   Account ID
// 			bill_line_item.put("account_id","1324986000067828502");
// 			bill_line_item.put("rate",shipping_cost);
// 			bill_line_item.put("quantity",1);
// 			bill_line_items.add(bill_line_item);
// 		}
// 		// info tax_data;
// 		new_custom_fields_list = list();
// 		custom_field_sales_tax_found = 0;
// 		if(tax_data.toDecimal() > 0.0)
// 		{
// 			temp_custom_field_map = {"customfield_id":"1324986000040485278","index":4,"label":"Sales Tax","placeholder":"cf_sales_tax","value":tax_data.toDecimal()};
// 			new_custom_fields_list.add(temp_custom_field_map);
// 			bill_map.put("custom_fields",new_custom_fields_list);
// 		}
// 		info bill_line_items;
// 		bill_map.put("vendor_id",po_full_detail.get("vendor_id"));
// 		bill_map.put("purchaseorder_ids",{po_full_detail.get("purchaseorder_id")});
// 		bill_map.put("status","draft");
// 		bill_map.put("current_sub_status","draft");
// 		bill_map.put("bill_number",bill_no);
// 		bill_map.put("date",invoice_date);
// 		bill_map.put("due_date",invoice_date.toDate().addDay(30).toString("yyyy-MM-dd"));
// 		bill_map.put("payment_terms_label","Net 30");
// 		bill_map.put("reference_number",po_no);
// 		bill_map.put("currency_id",po_full_detail.get("currency_id"));
// 		bill_map.put("line_items",bill_line_items);
// 		info "Bill Map " + bill_map;
// 		// Creating Bill using API
// 		bill_params = {"JSONString":bill_map};
// 		bill_resp = invokeurl
// 		[
// 			url :"https://books.zoho.com/api/v3/bills?organization_id=" + orgId
// 			type :POST
// 			parameters:bill_params
// 			connection:"mailparserzoho"
// 		];
// 		info bill_resp;
// 		if(bill_resp.get("code") == 0)
// 		{
// 			bill_id = bill_resp.get("bill").get("bill_id");
// 			info bill_id;
// 			file_resp = invokeurl
// 			[
// 				url :"https://books.zoho.com/api/v3/bills/" + bill_id + "/attachment?organization_id=" + orgId
// 				type :POST
// 				files:attach_file
// 				connection:"mailparserzoho"
// 			];
// 			info file_resp;
// 		}
// 	}
//}
return "";
}