string standalone.dealOwnerUpdateFinalCase()
{
//code done by pooja L on 25/5/2020
//User list of highrise and its corresponding highrise user
userlist = List();
userlist.add({"name":"Andria Ramelli","crm_id":3106252000000152034,"hr_id":"1218118"});
userlist.add({"name":"Anthony La Rocca","crm_id":3106252000000147711,"hr_id":"1254582"});
userlist.add({"name":"Carlo  Citrigno","crm_id":3106252000000147013,"hr_id":"937881"});
userlist.add({"name":"Chesia Melisa","crm_id":3106252000000152046,"hr_id":"1262788"});
userlist.add({"name":"Christie Best","crm_id":3106252000025726001,"hr_id":"1395960"});
userlist.add({"name":"Deborah Warner","crm_id":3106252000045664001,"hr_id":"1411870"});
userlist.add({"name":"Dennon Koziol","crm_id":3106252000049990001,"hr_id":"1413375"});
userlist.add({"name":"Zoho Zoho Developer","crm_id":3106252000014929001,"hr_id":"1415142"});
userlist.add({"name":"Emma Burns","crm_id":3106252000025727001,"hr_id":"1382543"});
userlist.add({"name":"Fern Citrigno","crm_id":3106252000000152052,"hr_id":"1082383"});
userlist.add({"name":"Kristopher Clark","crm_id":3106252000058241283,"hr_id":"1414362"});
userlist.add({"name":"Lauren Fisher","crm_id":3106252000064218001,"hr_id":"1417806"});
userlist.add({"name":"Marko Savic","crm_id":3106252000037668001,"hr_id":"1406845"});
userlist.add({"name":"Nicole Cashin","crm_id":3106252000067155001,"hr_id":"1418587"});
userlist.add({"name":"Rheanne Trottier","crm_id":3106252000024509019,"hr_id":"1382762"});
userlist.add({"name":"Shah Rai","crm_id":3106252000037644001,"hr_id":"1398583"});
userlist.add({"name":"Zyarina Zya","crm_id":3106252000026453004,"hr_id":"1377113"});
highriseAuth = "Basic OWZiYjY1ODg2NWY5MTUyODlmN2U5ZDNiM2E3MWNkYmI6WA==";
logs = zoho.crm.getRecords("Duplicate_Moderation_Log",1,1,{"cvid":3106252000089067034});
for each  log in logs
{
	try 
	{
		//log = zoho.crm.getRecordById("Duplicate_Moderation_Log",3106252000088695025);
		dealName = log.get("Deal_Name");
		dealID = log.get("HR_Deal_Id");
		highrisedeal = geturl("https://bestaccessdoors.highrisehq.com/deals/" + dealID + ".xml",{"Authorization":highriseAuth});
		highrisedeal = highrisedeal.replaceAll("&","&amp;",true);
		info dealName + " ___ " + highrisedeal;
		hrdealPrice = highrisedeal.executeXPath("deal/price/text()");
		if(hrdealPrice != null && hrdealPrice != "")
		{
			hrdealPrice = hrdealPrice.todecimal();
		}
		else
		{
			hrdealPrice = 0;
		}
		hrdealcurrency = highrisedeal.executeXPath("deal/currency/text()");
		hrdealStage = ifnull(highrisedeal.executeXPath("deal/status/text()"),"");
		DealMap = Map();
		//stopProcessing=false;
		if(hrdealStage != "")
		{
			if(hrdealStage.equalsignorecase("pending"))
			{
				DealMap.put("Stage","Pending");
			}
			else if(hrdealStage.equalsignorecase("won"))
			{
				DealMap.put("Stage","WON");
			}
			else if(hrdealStage.equalsignorecase("lost"))
			{
				DealMap.put("Stage","LOST");
			}
			else
			{
				info "****check deal stage " + hrdealStage;
				break;
			}
		}
		hrContactEmail = list();
		hrContactPhone = list();
		crmDealFound = false;
		errorMap = Map();
		CRMContactList = list();
		crmDealList = list();
		counter = 0;
		errorMap.put("Status","Try Again");
		user = ifnull(highrisedeal.executeXPath("deal/responsible-party-id/text()"),"");
		if(user != "")
		{
			for each  userrec in userlist
			{
				if(user == userrec.get("hr_id"))
				{
					hr_id = userrec.get("hr_id");
					owner = userrec.get("crm_id");
					DealMap.put("Owner",owner);
					info "----- owner  " + owner.toLong() + " hr id " + hr_id + " OWNER NAME : " + userrec.get("name") + "-----";
					break;
				}
			}
			if(!DealMap.containKey("Owner"))
			{
				DealMap.put("Owner","3106252000004512006");
				DealMap.put("HR_Owner_ID_If_CRM_Admin",user);
				info "-----Not Active HR owner: hr id " + hr_id + " OWNER NAME : crm@bestaccessdoors.com-----";
			}
		}
		else
		{
			DealMap.put("Owner","3106252000004512006");
			//  HR OWNER IS EMPTY crm@bestaccessdoors.com
			info "-----No HR owner Available: hr id " + hr_id + " OWNER NAME : crm@bestaccessdoors.com-----";
		}
		ownerFound = DealMap.containKey("Owner");
		if(ownerFound)
		{
			response1 = invokeurl
			[
				url :"https://www.zohoapis.com/crm/v2/Deals/search?criteria=((HighriseID:equals:" + dealID + "))"
				type :GET
				connection:"crm_connection"
			];
			info "response1 " + response1;
			searchDeals = response1.get("data");
			info "----searchDeals " + searchDeals.size() + "---resp :" + searchDeals + "------";
			if(searchDeals.size() == 1)
			{
				for each  crmDeal in searchDeals
				{
					//checkAccountOnce = false;
					crmDealId = crmDeal.get("id");
					crmDealAmount = ifnull(crmDeal.get("Amount"),0);
					crmDealCurrency = ifnull(crmDeal.get("Currency"),"");
					if(crmDeal.get("HR_Deal_Owner_Updated") == false)
					{
						if(hrdealcurrency != "" && hrdealcurrency != null && crmDealCurrency != "")
						{
							if(hrdealcurrency.equalsIgnoreCase(crmDealCurrency))
							{
								info "hr deal price" + hrdealPrice.todecimal();
								info "crm deal price" + crmDealAmount.todecimal();
								if(hrdealPrice.todecimal() == crmDealAmount.todecimal())
								{
									DealMap.put("Deal_Name",dealName);
									DealMap.put("HR_Deal_ID_Found",true);
									DealMap.put("Previous_Owner_Id",crmDeal.get("Owner").get("id"));
									info "Previous owner id : " + crmDeal.get("Owner").get("id");
									DealMap.put("HR_Deal_Owner_Updated",true);
									updateCrmDeal = zoho.crm.updateRecord("Deals",crmDeal.get("id"),DealMap);
									info "----- resp " + updateCrmDeal + "-----";
									info "------deal map " + DealMap + "---------";
									updateLog = zoho.crm.updateRecord("Duplicate_Moderation_Log",log.get("id"),{"Status":"Success"});
									info "------Update Success Log " + updateLog + "---------";
								}
								else
								{
									errorMap.put("CRM_Deal_Id",crmDealId);
									errorMap.put("Status","Try Again");
									errorMap.put("Message","HR Deal ID Same but Deal Amount Vary");
									createErrorLog = zoho.crm.updateRecord("Duplicate_Moderation_Log",log.get("id"),errorMap);
									info "-----------HR Deal ID Same but Deal Amount Vary error map : " + errorMap + "-----------------" + createErrorLog;
								}
							}
						}
					}
					else
					{
						//mark the deal is processed for another HR deal
						errorMap.put("CRM_Deal_Id",crmDealId);
						errorMap.put("Status","Processed for another error log");
						createErrorLog = zoho.crm.updateRecord("Duplicate_Moderation_Log",log.get("id"),errorMap);
						info "-----------processed for another log error map : " + errorMap + "-----------------";
					}
				}
			}
			else if(searchDeals.size() == 0)
			{
				//mark it corresponding deal not found
				errorMap.put("Message","Deal not found in CRM");
				createErrorLog = zoho.crm.updateRecord("Duplicate_Moderation_Log",log.get("id"),errorMap);
				info "-----------error map : " + errorMap + "-----------------";
			}
			else
			{
				//mark it in log more than One deal found with the same name
				//errorMap.put("Message",log.get("Message") + ", HR Deal Amount is Empty in CRM");
				createErrorLog = zoho.crm.updateRecord("Duplicate_Moderation_Log",log.get("id"),errorMap);
				info "-----------error map : " + errorMap + "-----------------";
			}
		}
	}
 catch (e)
	{		info e;
		updateLog = zoho.crm.updateRecord("Duplicate_Moderation_Log",log.get("id"),{"Status":"Try Again","Message":log.get("Message") + ", " + e});
		info "------Update Log " + updateLog + "---------";
	}
}
return "";
}